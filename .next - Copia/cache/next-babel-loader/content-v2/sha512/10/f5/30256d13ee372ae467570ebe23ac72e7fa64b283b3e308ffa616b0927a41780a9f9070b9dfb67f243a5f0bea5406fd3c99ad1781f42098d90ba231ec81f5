{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\brn93\\\\moveit-netx2\\\\src\\\\components\\\\experienceBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { ChallengeContext } from '../contexts/ChallengeContext';\nimport styles from '../style/components/ExperienceBar.module.css';\nexport function ExperienceBar() {\n  _s();\n\n  var _useContext = useContext(ChallengeContext),\n      currentExperience = _useContext.currentExperience,\n      experienceToNextLevel = _useContext.experienceToNextLevel;\n\n  var percentToNextLevel = Math.round(currentExperience * 100) / experienceToNextLevel;\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: styles.experienceBar,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"0 xp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"\".concat(percentToNextLevel, \"%\")\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.currentExperience,\n        style: {\n          left: \"\".concat(percentToNextLevel, \"%\")\n        },\n        children: [currentExperience, \" xp\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [experienceToNextLevel, \" xp\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExperienceBar, \"2c5K0JmvAbfaTzQu5ieAhx4FKwU=\");\n\n_c = ExperienceBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExperienceBar\");","map":{"version":3,"sources":["C:/Users/brn93/moveit-netx2/src/components/experienceBar.tsx"],"names":["useContext","ChallengeContext","styles","ExperienceBar","currentExperience","experienceToNextLevel","percentToNextLevel","Math","round","experienceBar","width","left"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAOC,MAAP,MAAmB,8CAAnB;AAEA,OAAO,SAASC,aAAT,GAAwB;AAAA;;AAAA,oBACoBH,UAAU,CAACC,gBAAD,CAD9B;AAAA,MACrBG,iBADqB,eACrBA,iBADqB;AAAA,MACHC,qBADG,eACHA,qBADG;;AAG3B,MAAMC,kBAAkB,GAAEC,IAAI,CAACC,KAAL,CAAWJ,iBAAiB,GAAC,GAA7B,IAAkCC,qBAA5D;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAEH,MAAM,CAACO,aAA1B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACA;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,YAAIJ,kBAAJ;AAAP;AAAZ;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAM,QAAA,SAAS,EAAEJ,MAAM,CAACE,iBAAxB;AAA2C,QAAA,KAAK,EAAE;AAACO,UAAAA,IAAI,YAAIL,kBAAJ;AAAL,SAAlD;AAAA,mBACKF,iBADL;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAA,iBAAOC,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAjBeF,a;;KAAAA,a","sourcesContent":["import { useContext } from 'react';\r\nimport { ChallengeContext } from '../contexts/ChallengeContext';\r\n\r\nimport styles from '../style/components/ExperienceBar.module.css';\r\n\r\nexport function ExperienceBar(){\r\n    const{currentExperience,experienceToNextLevel}=useContext(ChallengeContext)\r\n\r\n    const percentToNextLevel =Math.round(currentExperience*100)/experienceToNextLevel;\r\n\r\n    return (\r\n        <header className={styles.experienceBar}>\r\n            <span>0 xp</span>\r\n            <div>\r\n            <div style={{ width:`${percentToNextLevel}%`}}/>\r\n\r\n            <span className={styles.currentExperience} style={{left:`${percentToNextLevel}%`}}>\r\n                {currentExperience} xp</span>\r\n            </div>\r\n            <span>{experienceToNextLevel} xp</span>\r\n        </header>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}