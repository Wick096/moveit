{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/brn93/moveit-netx2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\brn93\\\\moveit-netx2\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { ChallengeContext } from '../contexts/ChallengeContext';\nimport styles from '../style/components/Countdown.module.css';\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var contexData = useContext(ChallengeContext);\n  console.log(contexData);\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(25 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Abandonar Ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"Wo6Oq5TRKawCN0hupBmUml3AG+I=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/brn93/moveit-netx2/src/components/Countdown.tsx"],"names":["useState","useEffect","useContext","ChallengeContext","styles","countdownTimeout","Countdown","contexData","console","log","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState ,useEffect, useContext} from 'react';\r\nimport { ChallengeContext } from '../contexts/ChallengeContext';\r\nimport styles from '../style/components/Countdown.module.css'\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown (){\r\n    const contexData = useContext(ChallengeContext);\r\n    console.log(contexData);\r\n\r\n    const[time,setTime]=useState(25*60);\r\n    const [isActive,setIsActive]=useState(false);\r\n    const [hasFinished,setHasFinished]=useState(false);\r\n\r\n    const minutes = Math.floor(time/60);\r\n    const seconds = time % 60;\r\n\r\n    const [minuteLeft,minuteRight] = String(minutes).padStart(2,'0').split('');\r\n    const [secondLeft,secondRight] = String(seconds).padStart(2,'0').split('');\r\n\r\n    function startCountdown(){\r\n            setIsActive(true);\r\n    }\r\n\r\n    function resetCountdown(){\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(25*60);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(isActive && time>0){\r\n            countdownTimeout = setTimeout(()=>{\r\n                setTime(time-1);\r\n            },1000)\r\n        }  else if (isActive && time==0){\r\n            setHasFinished(true);\r\n            setIsActive(false); \r\n        }  \r\n    },[isActive,time])\r\n    return (\r\n        <div>\r\n        <div className={styles.countdownContainer}>\r\n            <div>\r\n                <span>{minuteLeft}</span>\r\n                <span>{minuteRight}</span>\r\n            </div>\r\n            <span>:</span>\r\n            <div>\r\n                <span>{secondLeft}</span>\r\n                <span>{secondRight}</span>\r\n            </div>\r\n        </div>\r\n            {hasFinished ? (\r\n                <button\r\n                disabled \r\n                className={styles.countdownButton}>\r\n               \r\n                   Abandonar Ciclo\r\n                </button>\r\n            ):(\r\n                <>\r\n                 {isActive ?(\r\n                 <button \r\n                 type=\"button\" \r\n                 className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n                 onClick={resetCountdown}>\r\n                    \r\n                    Abandonar Ciclo\r\n                 </button>\r\n\r\n            ):(\r\n       \r\n\r\n         <button \r\n         type=\"button\" \r\n         className={styles.countdownButton}\r\n         onClick={startCountdown}>\r\n            \r\n             Iniciar um ciclo\r\n         </button>\r\n            )}\r\n            </>\r\n            )}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}