{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/brn93/moveit-netx2/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\brn93\\\\moveit-netx2\\\\src\\\\contexts\\\\ChallengeContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengeContext = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setIsLevelMoodalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelMoodalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelMoodalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.random() * challenges.length;\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ', {\n        body: \"Valendo \".concat(challenge.amount, \".xp\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completedChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completedChallenge: completedChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, isLevelUpModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"A6j08FKoBrCcjshcnqli5fIpQYg=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["C:/Users/brn93/moveit-netx2/src/contexts/ChallengeContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","ChallengeContext","ChallengeProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setIsLevelMoodalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completedChallenge","finalExperience"],"mappings":"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","sourcesContent":["import {createContext, useState,ReactNode, useEffect} from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\n\r\ninterface Challenge {\r\n    type:'body'|'eye';\r\n    description:string;\r\n    amount:number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n    level:number;\r\n    currentExperience:number;\r\n    experienceToNextLevel:number;\r\n    challengesCompleted:number;\r\n    activeChallenge:Challenge;\r\n    levelUp:()=>void;\r\n    startNewChallenge:()=>void;\r\n    resetChallenge:()=>void;\r\n    completedChallenge:()=>void;\r\n    closeLevelUpModal:()=>void;\r\n}\r\n\r\ninterface ChallengeProviderProps{\r\n    children:ReactNode;\r\n    level:number;\r\n    currentExperience:number;\r\n    challengesCompleted:number;\r\n      \r\n}\r\n\r\n\r\n\r\nexport const ChallengeContext = createContext({}as ChallengesContextData);\r\n\r\nexport function ChallengeProvider({\r\n    children,\r\n    ...rest\r\n}:ChallengeProviderProps){\r\n    const [level,setLevel]=useState(rest.level ?? 1);\r\n    const[currentExperience,setCurrentExperience]=useState(rest.currentExperience ?? 0);\r\n    const[challengesCompleted,setChallengesCompleted]=useState(rest.challengesCompleted ?? 0);\r\n\r\n    const[activeChallenge,setActiveChallenge]= useState(null)\r\n    const[isLevelUpModalOpen,setIsLevelMoodalOpen] = useState(false)\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1)*4,2)\r\n\r\n\r\n    useEffect(()=>{\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level',String(level));\r\n        Cookies.set('currentExperience',String(currentExperience));\r\n        Cookies.set('challengesCompleted',String(challengesCompleted));\r\n\r\n    },[level,currentExperience,challengesCompleted]);\r\n\r\n  function levelUp(){\r\n    setLevel (level+ 1);\r\n    setIsLevelMoodalOpen(true)\r\n  }\r\n\r\n  function closeLevelUpModal (){\r\n      setIsLevelMoodalOpen(false);\r\n  }\r\n\r\n  function startNewChallenge(){\r\n      const randomChallengeIndex=(Math.random()*challenges.length);\r\n      const challenge = challenges[randomChallengeIndex];\r\n\r\n      setActiveChallenge(challenge)\r\n\r\n      new Audio('/notification.mp3').play();\r\n\r\n      if(Notification.permission=== 'granted'){\r\n          new Notification ('Novo desafio ',{\r\n              body:`Valendo ${challenge.amount}.xp`\r\n          })\r\n      }\r\n  }\r\n\r\n  function resetChallenge(){\r\n      setActiveChallenge(null);\r\n  }\r\n\r\n  function completedChallenge()\r\n  {\r\n    if(!activeChallenge){\r\n        return;\r\n    }\r\n\r\n    const{amount}=activeChallenge;\r\n\r\n    let finalExperience = currentExperience + amount;\r\n\r\n    if(finalExperience>= experienceToNextLevel){\r\n        finalExperience = finalExperience - experienceToNextLevel;\r\n        levelUp();\r\n    }\r\n\r\n    setCurrentExperience(finalExperience);\r\n    setActiveChallenge(null);\r\n    setChallengesCompleted(challengesCompleted + 1);\r\n\r\n  }\r\n\r\n    return(\r\n        <ChallengeContext.Provider value={{\r\n            level,\r\n            currentExperience,\r\n            experienceToNextLevel,\r\n            challengesCompleted,\r\n            levelUp,\r\n            startNewChallenge,\r\n            activeChallenge,\r\n            resetChallenge,\r\n            completedChallenge,\r\n            closeLevelUpModal,\r\n            }}>\r\n            {children}\r\n        {isLevelUpModalOpen && <LevelUpModal />}\r\n        </ChallengeContext.Provider>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}