{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/brn93/moveit-netx2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\brn93\\\\moveit-netx2\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from '../style/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setisActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setisActive(true);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton).concat(styles.countdownButtonActive),\n      onClick: startCountdown,\n      children: \"Abandonar Ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"mIPbDJmmpihUzbcbudUnE9WJyJ8=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/brn93/moveit-netx2/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","isActive","setisActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","startCountdown","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACJH,QAAQ,CAAC,KAAG,EAAJ,CADJ;AAAA,MAClBI,IADkB;AAAA,MACbC,OADa;;AAAA,mBAEKL,QAAQ,CAAC,KAAD,CAFb;AAAA,MAEjBM,QAFiB;AAAA,MAERC,WAFQ;;AAIxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAC,EAAhB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AALwB,8BAOSQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CAPT;AAAA;AAAA,MAOjBC,UAPiB;AAAA,MAONC,WAPM;;AAAA,+BAQSJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA2B,GAA3B,EAAgCC,KAAhC,CAAsC,EAAtC,CART;AAAA;AAAA,MAQjBG,UARiB;AAAA,MAQNC,WARM;;AAUxB,WAASC,cAAT,GAAyB;AACjBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACP;;AAEDN,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGK,QAAQ,IAAIF,IAAI,GAAC,CAApB,EAAsB;AAClBgB,MAAAA,UAAU,CAAC,YAAI;AACXf,QAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACH,OAFS,EAER,IAFQ,CAAV;AAGH;AACJ,GANQ,EAMP,CAACE,QAAD,EAAUF,IAAV,CANO,CAAT;AAOA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACmB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAYKZ,QAAQ,gBACJ;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,YAAKJ,MAAM,CAACoB,eAAZ,SAA8BpB,MAAM,CAACqB,qBAArC,CAFT;AAGA,MAAA,OAAO,EAAEJ,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,gBAYZ;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,SAAS,EAAEjB,MAAM,CAACoB,eAFlB;AAGA,MAAA,OAAO,EAAEH,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GAxDehB,S;;KAAAA,S","sourcesContent":["import { useState ,useEffect} from 'react';\r\nimport styles from '../style/components/Countdown.module.css'\r\n\r\nexport function Countdown (){\r\n    const[time,setTime]=useState(25*60);\r\n    const [isActive,setisActive]=useState(false);\r\n\r\n    const minutes = Math.floor(time/60);\r\n    const seconds = time % 60;\r\n\r\n    const [minuteLeft,minuteRight] = String(minutes).padStart(2,'0').split('');\r\n    const [secondLeft,secondRight] = String(seconds).padStart(2,'0').split('');\r\n\r\n    function startCountdown(){\r\n            setisActive(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(isActive && time>0){\r\n            setTimeout(()=>{\r\n                setTime(time-1);\r\n            },1000)\r\n        }    \r\n    },[isActive,time])\r\n    return (\r\n        <div>\r\n        <div className={styles.countdownContainer}>\r\n            <div>\r\n                <span>{minuteLeft}</span>\r\n                <span>{minuteRight}</span>\r\n            </div>\r\n            <span>:</span>\r\n            <div>\r\n                <span>{secondLeft}</span>\r\n                <span>{secondRight}</span>\r\n            </div>\r\n        </div>\r\n            {isActive ?(\r\n                 <button \r\n                 type=\"button\" \r\n                 className={`${styles.countdownButton}${styles.countdownButtonActive}`}\r\n                 onClick={startCountdown}>\r\n                    \r\n                    Abandonar Ciclo\r\n                 </button>\r\n\r\n            ):(\r\n       \r\n\r\n         <button \r\n         type=\"button\" \r\n         className={styles.countdownButton}\r\n         onClick={startCountdown}>\r\n            \r\n             Iniciar um ciclo\r\n         </button>\r\n            )}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}