{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\brn93\\\\moveit-netx2\\\\src\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../style/global.css';\nimport { ChallengeContext } from '../contexts/ChallengeContext';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: 'teste',\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/brn93/moveit-netx2/src/pages/_app.tsx"],"names":["ChallengeContext","MyApp","Component","pageProps"],"mappings":";;;;;;;;;AAAA,OAAO,qBAAP;AACA,SAAQA,gBAAR,QAA+B,8BAA/B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,sBACA,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE,OAAlC;AAAA,2BACE,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAMD;;AAED,eAAeF,KAAf","sourcesContent":["import '../style/global.css'\nimport {ChallengeContext} from '../contexts/ChallengeContext'\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n  <ChallengeContext.Provider value={'teste'}>\n    <Component {...pageProps} />\n  </ChallengeContext.Provider>\n\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}